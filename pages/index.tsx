import Head from 'next/head'
import HeaderComponent from '../components/Homepage/header-component'
import stylesHp from '../styles/Homepage/Homepage.module.css';
import { getAllHomepage, getHomepageById } from "../lib/Homepage/homepage-lib";
import Homepage from "../types/Homepage/homepage-type";
import FooterComponent from '../components/Homepage/footer-component';
import RecipeTeaserComponent from '../components/Recipe/recipeTeaser-component';
import Image from 'next/image'
import HeroBanner from '../components/Homepage/hero-banner';
import { HOMEPAGE_ID } from '../lib/Common/constants';
import exifr from "exifr";

export async function getStaticProps({ preview = false }) {
  const allHomepage = await getAllHomepage(preview);
  const homepage = await getHomepageById(HOMEPAGE_ID);
  return {
    props: { allHomepage, homepage, preview },
    // Next.js will attempt to re-generate the page:
    // - When a request comes in
    // - At most once every 10 seconds
    revalidate: 10, //in seconds
  }

}

type Props = {
  allHomepage: Homepage[];
  homepage: Homepage;
}

const Homepage = ({ allHomepage, homepage }: Props) => {

  const getDataFromImage = async (event: React.ChangeEvent<HTMLInputElement>) => {
    if (event.target.files) {
      const output = await exifr.parse(event.target.files[0]);
      console.log(output)

      const data = await fetch(`/api/proxy?lat=${output.latitude}&lng=${output.longitude}`);

      // const data = await fetch(
      //   `https://api.geocodify.com/v2/reverse?api_key=${process.env.GEOCODE_API_KEY}&lat=${output.latitude}&lng=${output.longitude}`
      // );
      const locationData = await data.json();
      console.log(locationData);
    }
  }

  return (
    <div className={stylesHp.container}>
      <Head>
        <title>Homepage</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={stylesHp.main}>
        <HeaderComponent
          allHeaders={homepage.header}
        />
        <HeroBanner
          heroImageUrl={homepage.heroBanner?.results[0]?.fileUrl}
          altText=''
        />


        <div className={stylesHp.boxedContainer}>
          <h1 className={stylesHp.title}>
            {homepage.recipeTitle}
          </h1>
          <p className={stylesHp.SectionDescription}>{homepage.recipeSectionText}</p>

          <RecipeTeaserComponent
            allRecipes={allHomepage[0].recipes}
          />

        </div>
        <label>Choose a profile picture:</label>

        <input type="file"
          id="avatar" name="avatar"
          accept="image/png, image/jpeg"
          onChange={getDataFromImage} />

        <FooterComponent
          allFooters={homepage.footer}
        />


      </main>


    </div>
  )
}
export default Homepage;
